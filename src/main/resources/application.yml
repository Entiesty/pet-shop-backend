server:
  port: 8080
  error:
    include-message: always

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://47.122.155.110:3306/petshop_db?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456  # 确保与docker-compose.yml中的MYSQL_ROOT_PASSWORD一致

  data:
    redis:
      host: 47.122.155.110  # 使用公网IP
      port: 6379
      password: 123456  # 确保与docker-compose.yml中的requirepass一致

    mongodb:
      uri: mongodb://root:123456@47.122.155.110:27017/petshop_geo?authSource=admin&connectTimeoutMS=5000&socketTimeoutMS=5000

  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 500MB

  ai:
    openai:
      # 1. 您的硅基流动 API Key (保持不变)
      api-key: sk-xdsrciiskbkjlsoezabveiucbbfxwwbkzzwtihavviwhwrpd

      # 2. [核心修正] 将base-url的末尾加上 /v1
      base-url: https://api.siliconflow.cn

      chat:
        options:
          # 3. 您想使用的模型 (保持不变)
          model: deepseek-ai/DeepSeek-R1-0528-Qwen3-8B # 您可以换成其他模型如 "Qwen/Qwen2-7B-Instruct"
  mail:
    host: smtp.qq.com
    port: 587
    username: boogiepop1221@qq.com  # 例如：123456@qq.com
    password: lxpuuflgkxeoiece       # 不是QQ密码，是SMTP授权码
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true   # QQ邮箱需要启用TLS
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:/mapper/**/*.xml


minio:
  # 您的服务器IP和MinIO API端口(默认为9000)
  endpoint: "http://47.122.155.110:9000"
  # 您在docker-compose.yml中为MinIO设置的用户名和密码
  access-key: "minioadmin"
  secret-key: "minioadmin123"
  # 您在MinIO控制台中创建的Bucket名称
  bucket-name: "petshop"

# 配置springdoc-openapi，用于文档化和访问API
springdoc:
  # 配置Swagger UI的访问路径和排序方式
  swagger-ui:
    path: /swagger-ui.html  # Swagger UI的访问路径
    tags-sorter: alpha      # 按字母顺序排序标签
    operations-sorter: alpha  # 按字母顺序排序操作
  # 配置API文档的访问路径
  api-docs:
    path: /v3/api-docs  # API文档的访问路径
  # 配置API分组，用于组织和管理API
  group-configs:
    - group: 'default'   # API分组名称
      paths-to-match: '/**'  # 匹配所有路径
      packages-to-scan: com.example.petshopbackend.controller  # 扫描的包，用于自动发现API

jwt:
  secret: NKcdTFaPfQ4kr3pVbT3zz5LnKlJMm7PIKR3cbNGBakU=
  expire: 36000000

